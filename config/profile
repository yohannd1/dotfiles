#!/usr/bin/env bash
#
# shell profile - this is run at initial login, both on the computers and on
# termux.

_exists() { command -v "$1" >/dev/null 2>/dev/null; }
_isTermux() { [ "$(uname -o)" = Android ]; }

_sourceLogged() {
  [ $# = 1 ] || return 1
  printf >&2 "Sourcing %s...\n" "$(basename "$1")"
  . "$1"
}

# load environment variables, set up $PATH and load libraries
_sourceLogged ~/.config/dots/env.sh
_sourceLogged ~/.config/dots/path.sh

# TODO: function for starting synchronous task (for logging improvement lol)

_startJob() {
  local line
  local job_name=$1
  shift

  printf >&2 'Starting job -> "%s"\n' "$job_name"

  "$@" 2>&1 | while read line; do
    printf >&2 "\033[2K\r@job[%s] :: %s\n" "$job_name" "$line"
  done &
}

_updateClock() {
  local output=$(sudo -n ntpd -gq 2>&1)

  if [ $# = 0 ]; then
    printf >&2 "Update finished!\n"
  else
    printf >&2 "Update failed - printing output..."
    printf >&2 "%s\n" "$output"
  fi
}

_isTermux || tty-loadcolors

os=$(uname -o)
printf >&2 "Uname: %s\n" "$os"

_setupDotcfg() {
  if ! _exists dotcfg; then
    printf >&2 "*** WARNING: dotcfg not found!\n"
    return 1
  fi

  printf >&2 "*** Setting up dotcfg...\n"
  _folder=$(mktemp -d /tmp/dotcfg.XXXXXX) || {
    printf >&2 " * Failed to make temp directory\n"
    return 1
  }
  _socket="$_folder/dotcfg.sock"
  export DOTCFG_SOCKET="$_socket"
  printf >&2 " *  Starting daemon\n"
  dotcfg daemon >/dev/null 2>/dev/null & disown

  printf >&2 " *  Waiting for daemon...\n"
  _loaded=
  for i in $(seq 0 10); do
    sleep 0.1
    [ -e "$_socket" ] && {
      _loaded=1
      break
    }
  done

  if [ -z "$_loaded" ]; then
    printf >&2 " *  Timeout - daemon took too long to respond...\n"
    return 1
  fi

  printf >&2 " *  Loading settings into daemon...\n"
  gen-res dotcfg | dotcfg stdin-send >/dev/null

  printf >&2 " *  Done!\n"
}

# termux-only services
if _isTermux; then
  # {
  #   printf >&2 "*** Enabling wake lock...\n"
  #   termux-wake-lock
  # } &
  {
    printf >&2 "*** Launching sshd...\n"
    pgrep sshd >/dev/null || sshd # it uses port 8022 btw
  } &
fi

if ! _isTermux; then
  # update the date because clock problems
  _exists ntpd && _startJob "Clock Update" _updateClock

  # prepare GPG & SSH
  printf >&2 "*** Preparing GPG and SSH..."
  gpgconf --launch gpg-agent
  export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
  printf >&2 "OK!\n"

  # set up dotcfg daemon and load config
  _setupDotcfg

  bootMarker="${TMPDIR:-/tmp}/dotf.booted"
  if [ -f "$bootMarker" ]; then
    printf >&2 "*** Already booted - skipping sysm call\n"
  else
    printf >&2 "*** Running sysm...\n"
    sysm && touch "$bootMarker"
  fi
fi

if _isTermux; then
  androidTermux() { SESSION_NAME=android tmux-tray; }
  _exists tmux && [ -z "$TMUX" ] && androidTermux
fi
