# -*- mode: python -*-
# vim: fdm=marker ft=conf cindent

# Configuration for picom (version picom-git@AUR)
#
# Inspiration / Stolen from:
# http://ix.io/AlX

## Renderer #######################################

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";

# [GLX backend] avoid using the stencil buffer
# Recommended - might improve performance
glx-no-stencil = true;

# [GLX backend] Copy unmodified regions from front buffer instead of redrawing them all.
# See man page for more.
glx-copy-from-front = false;

# [GLX backend] Use MESA_copy_sub_buffer to do partial screen update.
# Overrides --glx-copy-from-front.
glx-use-copysubbuffermesa = true;

# [GLX backend] Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).
# Recommended if it works.
glx-no-rebind-pixmap = true;

## Shadows ########################################

# Enabled client-side shadows on windows.
shadow = true;

# The blur radius for shadows. (default 12)
shadow-radius = 40;

# The left offset for shadows. (default -15)
shadow-offset-x = -45;

# The top offset for shadows. (default -15)
shadow-offset-y = -20;

# The translucency for shadows. (default .75)
shadow-opacity = 0.2;

# Color mask(?) for shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;

# Avoid drawing shadow on all shaped windows
shadow-ignore-shaped = false;

# Shadow exclusion
shadow-exclude = [
    "! name~=''",
    "name = 'Notification'",
    "name = 'Plank'",
    "name = 'Docky'",
    "name = 'Kupfer'",
    "name = 'xfce4-notifyd'",
    "name *= 'VLC'",
    "name *= 'picom'",
    "name *= 'Chromium'",
    "name *= 'Chrome'",
    "class_g = 'Conky'",
    "class_g = 'Kupfer'",
    "class_g = 'Synapse'",
    "class_g ?= 'Notify-osd'",
    "class_g ?= 'Cairo-dock'",
    "class_g ?= 'Xfce4-notifyd'",
    "class_g ?= 'Xfce4-power-manager'",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
];

## Rounded corners ################################

corner-radius = 15.0;
round-borders = 1;

# Exclude conditions for rounded corners.
rounded-corners-exclude = [
    "window_type = 'dock'",
    "window_type = 'desktop'"
];

## Opacity ########################################

active-opacity = 1;
inactive-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;

# Dim inactive windows. (0.0 - 1.0)
inactive-dim = 0.2;

# Do not let dimness adjust based on window opacity.
inactive-dim-fixed = true;

opacity-rule = [
    "0:_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
];

## Blur ###########################################

# GLX backend is preferred, since it might have bad performance with X.
blur-background = true;
blur-background-frame = true;
blur-background-fixed = true;
blur-kernel = "7x7box";
blur-method = "dual_kawase";
blur-strength = 5;

blur-background-exclude = [
    # "window_type = 'dock'",
    "window_type = 'desktop'",
    "name = 'Awesome drawin'",
];

## Fading #########################################

# Fade windows during opacity changes.
fading = false;

# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 3;

# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.05;

# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.05;

# Fade windows in/out when opening/closing
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [];

## Other ##########################################

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;

# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;

# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;

# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

# Enable vsync.
vsync = true;

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
dbe = true;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
# paint-on-overlay may make the flickering less obvious.
unredir-if-possible = false;

# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;

# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

## Window types ###################################

wintypes: {
    tooltip = {
        # fade: Fade the particular type of windows.
        fade = true;
        # shadow: Give those windows shadow
        shadow = false;
        # opacity: Default opacity for the type of windows.
        opacity = 0.85;
        # focus: Whether to always consider windows of this type focused.
        focus = true;
    };

    dock = {
        shadow = false;
    };

    dnd = {
        shadow = false;
    };

    popup_menu = {
        opacity = 1.00;
    };
};
