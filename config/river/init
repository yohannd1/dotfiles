#!/usr/bin/env bash
# vim: fdm=marker

. ~/.config/dots/env.sh

exists() { command -v "$1" >/dev/null 2>/dev/null; }

export XDG_CURRENT_DESKTOP=river

cBorderNormal=$(dotcfg send get:river.border-normal)
cBorderFocus=$(dotcfg send get:river.border-focus)
borderWidth=2

# Set background and border color
riverctl background-color "$(dotcfg send get:river.background)"
riverctl border-color-unfocused "$cBorderNormal"
riverctl border-color-focused "$cBorderFocus"
riverctl border-width "$borderWidth"

systemctl --user import-environment DISPLAY WAYLAND_DISPLAY
dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP

# common desktop init commands (separate script)
riverctl spawn dotf.common.deskinit

# close the focused view
riverctl map normal Super Q close

# to exit river
riverctl map normal Super+Alt+Control E exit

# focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# swap the focused view with the next/previousview in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# focus the next/previous output
riverctl map normal Super+Alt J focus-output next
riverctl map normal Super+Alt K focus-output previous

# send window to another output
riverctl map normal Super+Shift+Alt J send-to-output -current-tags next
riverctl map normal Super+Shift+Alt K send-to-output -current-tags previous

# Super+Return to bump the focused view to the top of the layout stack
# riverctl map normal Super+Shift Return zoom

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
# riverctl map -repeat normal Super+Shift H send-layout-cmd rivertile "main-count +1"
# riverctl map -repeat normal Super+Shift L send-layout-cmd rivertile "main-count -1"

#  Mouse keybindings
riverctl map-pointer normal Super BTN_LEFT move-view
riverctl map-pointer normal Super+Shift BTN_LEFT resize-view
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((2**9 - 1))) # only 9 workspeces tbh
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

riverctl map normal Super+Shift Space toggle-float

riverctl map normal Super+Shift F toggle-fullscreen

# App keybindings
riverctl map normal Super Return spawn "$TERMINAL"
riverctl map normal Super+Shift Return spawn "$TERMINAL -c float"

riverctl map normal Super Space spawn "runnsend error-and-output fzrun"
riverctl map normal Super b spawn "runnsend error $BROWSER"
riverctl map normal Super e spawn "graphedit"
riverctl map normal Super w spawn "setbg"
riverctl map normal Super c spawn "runnsend error-and-output dotf.screenshot"
riverctl map normal Super+Shift c spawn "runnsend error-and-output dotf.screenshot --full"

riverctl map normal Super F10 spawn "termup -f runread fzmount -m"
riverctl map normal Super+Shift F10 spawn "termup -f runread fzmount -u"

riverctl map normal Super+Alt t spawn "dotf.wrap.tray"
riverctl map normal Super+Alt o spawn "runnsend error-and-output fzpow"
riverctl map normal Super+Alt m spawn "$TERMINAL -c float -e pulsemixer"
riverctl map normal Super+Alt c spawn "$TERMINAL -c float -g 65x10 -e runread cal -3"
riverctl map normal Super+Alt a spawn "$TERMINAL -c float -e runread acw-today-report"
riverctl map normal Super+Alt p spawn "$TERMINAL -c float -e calc"
riverctl map normal Super+Alt s spawn "$TERMINAL -e tmux-tray" # "scratchpad"

# volume management
riverctl map -repeat normal Super Comma spawn "volumectl dec"
riverctl map -repeat normal Super Period spawn "volumectl inc"
riverctl map normal Super y spawn "volumectl togglemute"

# music player
riverctl map normal Super+Alt y spawn "playerctl play-pause"
riverctl map normal Super+Alt Comma spawn "playerctl previous"
riverctl map normal Super+Alt Period spawn "playerctl next"

# backlight (brightness)
riverctl map -repeat normal Super Minus spawn "backlightctl mod -5"
riverctl map -repeat normal Super Equal spawn "backlightctl mod 5"

# red screen (wl-gammarelay)
riverctl map normal Super F12 spawn "dotf.wrap.redscreen toggle"

# Set keyboard repeat rate
riverctl set-repeat "$KBRATE_INTERVAL" "$KBRATE_DELAY"

# Floating views
riverctl rule-add -app-id '*float*' float  # anything that has float in the id
riverctl rule-add -title 'Task Manager' float # lxtask
riverctl rule-add -title '*Pinta' float # pinta

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add csd -app-id "bar"

# Set up layout generator
if exists wideriver; then
  riverctl default-layout wideriver
  wideriver \
    --layout 'left' --layout-alt 'monocle' \
    --border-width "$borderWidth" \
    --border-width-monocle "$borderWidth" \
    --border-color-focused "$cBorderFocus" \
    --border-color-focused-monocle "$cBorderFocus" \
    --border-color-unfocused "$cBorderNormal" \
    &

  riverctl map normal Super Tab send-layout-cmd wideriver '--layout-toggle'
  riverctl map -repeat normal Super H send-layout-cmd wideriver "--ratio -0.05"
  riverctl map -repeat normal Super L send-layout-cmd wideriver "--ratio +0.05"
else
  riverctl default-layout rivertile
  rivertile -view-padding 2 -outer-padding 2 &

  # Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
  riverctl map -repeat normal Super H send-layout-cmd rivertile "main-ratio -0.05"
  riverctl map -repeat normal Super L send-layout-cmd rivertile "main-ratio +0.05"

  # Super+{Up,Right,Down,Left} to change layout orientation
  # SO CONFUSING
  # riverctl map normal Super Up    send-layout-cmd rivertile "main-location top"
  # riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
  # riverctl map normal Super Down  send-layout-cmd rivertile "main-location bottom"
  # riverctl map normal Super Left  send-layout-cmd rivertile "main-location left"
fi

# dell i3567-a30c
dell_touchpad="pointer-1739-30966-Synaptics_TM3096-006"
riverctl input "$dell_touchpad" natural-scroll enabled
riverctl input "$dell_touchpad" tap enabled
riverctl input "$dell_touchpad" scroll-method two-finger

# River will send the process group of the init executable SIGTERM on exit.
