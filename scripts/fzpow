#!/usr/bin/env bash
#
# A script for power actions.

PROGNAME=$(basename "$0")
exists() { command -v "$1" >/dev/null 2>/dev/null; }

main() {
  case $# in
    0)
      choice=$(fuzzyMenu) || exit 1
      main "$choice"
      ;;

    1)
      case "$1" in
        lock|exit|suspend|hibernate|reboot|shutdown|shutdown_now) eval "action_$1" ;;
        *) showHelp ;;
      esac
      ;;

    *) showHelp ;;
  esac
}

fuzzyMenu() {
  fzagnostic -p "Power: " <<EOF
lock
exit
suspend
hibernate
reboot
shutdown
shutdown_now
EOF
}

showHelp() {
cat >&2 <<EOF
Usage: $PROGNAME [{ lock | exit | suspend | hibernate | reboot | shutdown | shutdown_now }]
If no argument is specified, a fzagnostic pop-up is shown to select it manually.
EOF
exit 2
}

isWayland() { [ "$WAYLAND_DISPLAY" ]; }
isXorg() { ! isWayland && [ "$DISPLAY" ]; }

action_lock() {
  _getLockColors() {
    c_init="0x$(dotcfg send get:theme_no_prefix.base01)" || return 1
    c_input="0x$(dotcfg send get:theme_no_prefix.base03)" || return 1
    c_fail="0x$(dotcfg send get:theme_no_prefix.base0F)" || return 1
  }

  if isXorg && exists bslock; then
    _lock() { bslock; }
  elif isXorg && exists betterlockscreen; then
    _lock() { betterlockscreen -l; }
  elif isWayland && [ -z "$NIRI_SOCKET" ] && exists waylock; then
    args=()
    _getLockColors && args+=(-init-color "$c_init" -input-color "$c_input" -fail-color "$c_fail")
    _lock() { waylock "${args[@]}"; }
  elif isWayland && exists swaylock; then
    args=()
    _getLockColors && args+=(--color "$c_init")
    _lock() { swaylock "${args[@]}"; }
  else
    printf >&2 "No valid lockscreen program found.\n"
    return 1
  fi

  trap '' INT # prevent ctrl-c, as this part is finicky

  start_time=$(date +'%s')
  _lock
  exit_code=$?
  end_time=$(date +'%s')

  if [ "$exit_code" = 0 ]; then
    [ "$WM" = dwm ] && pkill -RTMIN+1 dwmblocks
    trap - INT # restore ctrl-c if it is successful
  elif [ $((end_time - start_time)) -le 2 ]; then
    notify-send -u "Critical" "Lockscreen command died. Whoops!"
  else
    # it's been more than the time we set as "reasonable" for it dying; shut down the system for security reasons
    notify-send -u "Critical" "Lockscreen command died too late! Shutting down."
    systemctl poweroff
  fi
}

action_exit() {
  case "$WM" in
    i3) i3-msg exit ;;
    bspwm) bspc quit ;;
    dwm)
      printf >&2 "%s\n" "dwm has a specific key to be shut down - refer to your config.h file"
      exit 1
      ;;
    *)
      printf >&2 'Unknown wm "%s" - exiting will not work\n' "$WM"
      exit 1
      ;;
  esac
}

action_suspend() {
  action_lock || return &
  sleep 1
  systemctl suspend
}

action_hibernate() {
  printf >&2 "The hibernate action is currently unimplemented\n"
  exit 1
}

action_reboot() { systemctl reboot; }
action_shutdown() { termup -f shutdown-routine; }
action_shutdown_now() { systemctl poweroff; }

main "$@"
