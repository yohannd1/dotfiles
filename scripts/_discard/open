#!/usr/bin/env sh

. "$(uselib std)" || exit 127
. "$(uselib filematch)" || exit 127
depCheck termup runpage

if [ -z "$OPEN_GUI" ] && [ "$WAYLAND_DISPLAY" ]; then
  OPEN_GUI=1
fi

warn() {
  local out=$(printf "$@")
  if [ "$OPEN_GUI" ]; then
    notify-send "$out"
  else
    printf >&2 "%s\n" "$out"
  fi
}

try() {
  local action="$1"
  shift

  # special cases for first arg
  checkExists "$@" || return

  # gui <prog...>: block stdout and stderr; see 'openfork' script for automatic dettachment
  # tty <prog...>: don't block anything: open the program in the current terminal
  # pop <prog...>: pop up a new terminal using the 'termup' script
  # fallback: starts the alt program specified in $OPEN_ALT
  case "$action" in
    gui) [ "$OPEN_GUI" ] && openGui "$@" ;;
    tty) [ -z "$OPEN_GUI" ] && openTty "$@" ;;
    pop) openPop "$@" ;;
    fallback) openFallback ;;
    *)
      printf >&2 "Invalid action: %s\n" "$action"
      printf >&2 "Args: "
      printf >&2 '"%s" ' "$action" "$@"
      printf >&2 "\n"
      exit 1
      ;;
  esac
}

block() {
  if match "$@"; then
    warn "Attempted to open blocked file/url %s (%s)\n" "$FILE" "$_filematch_mimetype"
    exit 1
  fi
}

openGui() {
  "$@" >/dev/null 2>&1
  exit
}

openTty() {
  "$@"
  exit
}

openPop() {
  if [ "$OPEN_GUI" ]; then
    openGui termup "$@"
  else
    openTty "$@"
  fi
  exit
}

openXdg() {
  VIA_OPEN=1 xdg-open "$FILE"
  exit
}

openFallback() {
  [ -z "$OPEN_FALLBACK_SILENT" ] && warn "open (%s): fallback to %s\n" "$FILE" "$OPEN_ALT"
  "$OPEN_ALT" "$FILE"
}

checkExists() {
  case "$1" in
    runpage) exists "$2" ;;
    *) exists "$1" ;;
  esac
}

set -f -o noclobber -o noglob
OPEN_ALT=${OPEN_ALT:-"xdg-open"}

if [ $# != 1 ]; then
  cat >&2 <<EOF
Usage: $(basename $0) { <FILE> | <URL> }
Environment variables:
  OPEN_GUI: forces to open only apps in GUI mode.
  OPEN_ALT: a fallback opener; default is xdg-open
EOF
  exit 1
fi

FILE="$1"
if printf "%s" "$FILE" | grep -q '^file://'; then
  FILE=$(printf "%s" "$1" | sed 's|^file://||g; s|%20| |g')
fi
filematch_initialize "$FILE"

# special urls in:this+format:idk
[ "$_filematch_is_special" ] && openXdg

block mime 'application/x-sharedlib'
block mime 'application/x-shared-library-la'
block mime 'application/x-executable'
block mime 'application/x-shellscript'

match mime 'inode/directory' && try pop "$FILEMAN" "$FILE"
match mime 'inode/x-empty' && try pop runpage cat "$FILE"
match mime 'text/troff' && try pop runpage man -l "$FILE"
# match mime 'text/*' && try pop runpage cat "$FILE"
match mime '*/xml' && try pop runpage cat "$FILE"
match ext 'txt|log' && try pop runpage cat "$FILE"

match url 'vscode' && openXdg
match url 'steam' && openXdg

match ext 'drawio' && try gui drawio "$FILE"
match ext 'godot' && try gui Godot "$FILE"
match ext 'yyp' && try gui GameMaker "$FILE"

# OpenMPT modules
if match ext 'mod|it|s3m|mptm'; then
  try pop openmpt123 "$FILE"
fi

match ext 'nsf' && try pop nosefart "$FILE"

if match url 'http|https'; then
  try gui "$BROWSER" "$FILE"
  try tty "$TERMBROWSER" "$FILE"
fi

if match ext 'swf'; then
  # try gui ruffle "$FILE"
  try gui flashplayer "$FILE"
fi

match ext 'djvu' && try gui zathura "$FILE"
match ext 'ps' && try gui zathura "$FILE"
match ext 'epub' && try gui zathura "$FILE"

if match ext 'pdf' || match mime 'application/pdf'; then
  try gui zathura "$FILE"
  try pop runpage pdftotext -l 10 -nopgbrk -q -- "$FILE" -
  try pop runpage mutool draw -F txt -i -- "$FILE" 1-10
  try pop runpage exiftool "$FILE"
fi

if match ext 'mid|midi'; then
  try tty play-midi "$FILE"
  try gui termup -f play-midi "$FILE"
  try tty mpv --no-video "$FILE"
  try gui termup -f mpv --no-video "$FILE"
fi

# trackers & VGM
match ext 'fur|dmf' && try gui furnace "$FILE"
match ext 'btm' && try gui BambooTracker "$FILE"
match ext 'vgm' && try pop vgmplay "$FILE"

if match mime 'audio/*' || match ext 'aac|flac|m4a|mpa|mp2|mp3|ogg|wav|wma|webm'; then
  try tty mpv --no-video "$FILE"
  try gui termup -f mpv --no-video "$FILE"
  try pop mocplay "$FILE" "opener"
  try tty exiftool "$FILE"
  try pop runpage mediainfo "$FILE"
fi

if match mime 'video/*' ||
  match ext 'avi|mkv|mp4'; then
  try gui smplayer "$FILE"
  try gui mpv "$FILE"
  try tty mpv --no-video "$FILE"
  try pop runpage mediainfo "$FILE"
fi

if match ext 'a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma' \
|| match ext '|lzo|rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip'; then
  try pop runpage atool --list -- "$FILE"
  try pop runpage bsdtar --list --file "$FILE"
fi

match ext 'rar' && try pop runpage unrar l -p- -- "$FILE"
match ext '7z' && try pop runpage 7z l -p -- "$FILE"

if match ext 'torrent'; then
  try pop rtorrent "$FILE"
  try pop runpage transmission-show -- "$FILE"
fi

if match ext 'mmp|mmpz'; then
  try gui @lmms "$FILE" # a wrapper I have on my PC
  try gui lmms "$FILE"
fi

if match ext 'rad'; then
  try gui radium "$FILE"
fi

match ext 'odt|rtf|docx|doc' && try gui libreoffice "$FILE"
match ext 'ppt|pptx' && try gui libreoffice "$FILE"
match ext 'odg' && try gui libreoffice "$FILE"
match ext 'odt|ods|odp|sxw' && try pop runpage odt2txt "$FILE"
match ext 'kra' && try gui krita "$FILE"

match ext 'tic' && try gui tic80 "$FILE"

if match ext 'md'; then
  try tty runpage glowrapper "$FILE"
  try gui md-preview "$FILE"
fi

if match ext 'htm|html|xhtml'; then
  try tty runpage w3m -dump "$FILE"
  try tty runpage lynx -dump -- "$FILE"
  try tty runpage elinks -dump "$FILE"
  try gui "$BROWSER" "$FILE"
fi

match ext 'rpy' && try pop "$EDITOR" "$FILE"

if match ext 'json'; then
  try pop runpage jq --color-output . "$FILE"
  try pop runpage python -m json.tool -- "$FILE"
fi

match ext 'kdenlive' && try gui kdenlive "$FILE"
match ext 'sunvox' && try gui sunvox "$FILE"
match ext 'ardour' && try gui ardour7 "$FILE"

if match mime 'image/vnd.djvu'; then
  try tty runpage djvutxt "$FILE"
  try tty runpage exiftool "$FILE"
fi

if match mime 'image/*' || match ext 'gif|jpg|png'; then
  try gui sxiv -p "$FILE"
  try tty runpage viu -n "$FILE"
  try tty runpage img2txt --gamma=0.6 -- "$FILE"
  try tty runpage exiftool "$FILE"
fi

openFallback
