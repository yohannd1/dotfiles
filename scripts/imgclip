#!/usr/bin/env sh

PROGNAME=$(basename "$0")

if [ "$WAYLAND_DISPLAY" ]; then
  readToClipboard() { wl-copy -t "$1"; }
else
  readToClipboard() { xclip -sel clip -t "$1"; }
fi

main() {
  if [ $# != 1 ]; then
    printf >&2 "%s: %s\n" "$PROGNAME" "a tool to copy images to clipboard"
    printf >&2 "Usage: %s\n" "$PROGNAME <FILE>"
    exit 1
  fi

  if [ ! -f "$1" ]; then
    printf >&2 "%s: %s\n" "$PROGNAME" "file does not exist: $1"
    exit 1
  fi

  type=$(file -b --mime-type "$1") || exit 1

  case "$type" in
    # utterly trivial compared to the other messes...
    image/png) cat "$1" | readToClipboard "$type" ;;

    image/jpeg|image/webp|image/gif)
      # firefox/chromium/xclip (not sure who exactly) struggle with jpeg for some weird reason, so we have to spoof the mimetype.
      # in case I ever need it: there's also converting with `magick "$1" -quality 4 -format png - | readToClipboard 'image/png'`
      # FIXME: is this needed in wayland? or is it just an issue with xclip?
      cat "$1" | readToClipboard 'image/png'
      ;;

    *)
      msg "Warning: unknown type: $type - copying might not work!"
      cat "$1" | readToClipboard 'image/png'
      exit 1
      ;;
  esac
}

msg() {
  if [ -t 2 ]; then
    printf >&2 "%s\n" "$*"
  else
    notify-send -- "$*"
  fi
}

main "$@"
