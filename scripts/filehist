#!/usr/bin/env sh

PROGNAME=$(basename "$0")

usage() {
  printf >&2 "Usage: %s\n" "$PROGNAME { add [RECENT] | list | select [EDITOR] | tidy }"
  exit 1
}

XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
FILEHIST_FILE="${FILEHIST_FILE:-$XDG_CACHE_HOME/filehist}"
FILEHIST_MAX_LIMIT="${FILEHIST_MAX_LIMIT:-150}"
lock_path="${TMPDIR:-/tmp}/filehist-lock"

existCheck() {
  if [ ! -e "$FILEHIST_FILE" ]; then
    touch "$FILEHIST_FILE" || exit 1
  fi
}

tidyHistory() {
  tmp=$(mktemp) || exit 1

  tail -"${FILEHIST_MAX_LIMIT}" < "$FILEHIST_FILE" | while read -r line; do
    [ -e "$line" ] && { printf "%s\n" "$line" >> "$tmp"; }
  done

  cat "$tmp" > "$FILEHIST_FILE"
  rm -f "$tmp"
}

if ! mkdir "$lock_path" >/dev/null 2>/dev/null; then
  printf >&2 "The lock (at %s) still exists! Maybe there is another instance of filehist running?\n" "$lock_path"
  exit 1
fi

# just to release the lock
cleanup() { rmdir "$lock_path"; }
trap 'cleanup' EXIT

hasNoOcurrences() {
  while read -r line; do
    [ "$1" = "$line" ] && return 1
  done < "$FILEHIST_FILE"

  return 0
}

case $# in
  1)
    case "$1" in
      list)
        existCheck
        [ -z "$FILEHIST_NO_TIDY" ] && tidyHistory
        cat "$FILEHIST_FILE"
        ;;
      select)
        existCheck
        [ -z "$FILEHIST_NO_TIDY" ] && tidyHistory
        fzagnostic < "$FILEHIST_FILE"
        ;;
      tidy)
        existCheck
        tidyHistory
        ;;
      *) usage ;;
    esac
    ;;
  2)
    case "$1" in
      add)
        existCheck
        [ -z "$FILEHIST_NO_TIDY" ] && tidyHistory
        file=$(realpath -m "$2")

        if hasNoOcurrences "$file"; then
          printf "%s\n" "$file" >> "$FILEHIST_FILE"
        fi
        ;;
      select)
        existCheck
        [ -z "$FILEHIST_NO_TIDY" ] && tidyHistory
        choice=$(fzagnostic < "$FILEHIST_FILE") || exit 1

        cleanup && exec "$2" "$choice"
        ;;
      *) usage ;;
    esac
    ;;
  *) usage ;;
esac
