#!/usr/bin/env sh

# Useful source: https://customlinux.blogspot.com/2013/02/pavolumesh-control-active-sink-volume.html

progname=$(basename "$0")
set -ue

max_limit=${VOLUMECTL_MAX_LIMIT:-100}
inc_amount=${VOLUMECTL_INCREMENT:-2}

exists() { command -v "$1" >/dev/null; }

showHelp() {
  cat >&2 <<EOF
Usage: $progname { inc | dec | mute } [SINK]
SINK defaults to the default audio sink.
EOF
  exit 2
}

if [ $# = 0 ] || [ $# -gt 2 ]; then
  showHelp
fi

if exists wpctl; then
  sink=${2:-"@DEFAULT_AUDIO_SINK@"}

  _decrease() { wpctl set-volume "$sink" "$inc_amount"%-; }
  _increase() {
    _limit=$(echo "scale=2; $max_limit/100" | bc)
    wpctl set-volume -l "$_limit" "$sink" "$inc_amount"%+
  }
  _mute() { wpctl set-mute "$sink" toggle; }

elif exists pactl; then
  sink=${2:-$(getActiveSink)}

  getActiveSink() {
    pacmd list-sinks | awk '/* index:/ { print $3 }'
  }
  _decrease() { pactl set-sink-volume "$sink" -"$inc_amount"%; }
  _increase() { pactl set-sink-volume "$sink" +"$inc_amount"%; }
  _mute() {
    is_muted=$(pacmd list-sinks \
      | grep -A 15 "index: ${sink}" \
      | awk '/muted/ { print $2 }')

    case "$is_muted" in
      yes) pactl set-sink-mute "$sink" 0 ;;
      no) pactl set-sink-mute "$sink" 1 ;;
      *) printf >&2 "Unknown mute status: %s\n" "$is_muted" ;;
    esac
  }
else
  printf >&2 "Could not figure out which command to use.\n"
  exit 1
fi

case "$1" in
  dec) _decrease ;;
  inc) _increase ;;
  mute) _mute ;;
  *)
    printf >&2 "Invalid option: %s\n" "$1"
    showHelp
    ;;
esac
