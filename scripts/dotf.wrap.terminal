#!/usr/bin/env janet

(use dotf-utils)

(def WAYLAND-TERMINAL (or (os/getenv "WAYLAND_TERMINAL") "foot"))
(def XORG-TERMINAL (or (os/getenv "XORG_TERMINAL") "xterm"))
(def WAYLAND-DISPLAY (os/getenv "WAYLAND_DISPLAY"))
(def XORG-DISPLAY (os/getenv "DISPLAY"))

(defn shell-cmd-exists [cmd]
  (def p (os/spawn ["sh" "-c" (string/join ["command -v" cmd] " ")]
                   :p {:out :pipe :err :pipe}))
  (= (:wait p) 0))

(when (and WAYLAND-DISPLAY (not (shell-cmd-exists WAYLAND-TERMINAL))
  (printf "WAYLAND_DISPLAY is set, but couldn't find %s" WAYLAND-TERMINAL)
  (os/exit 1)))

(when (and XORG-DISPLAY (not (shell-cmd-exists XORG-TERMINAL)))
  (die 1 "DISPLAY is set, but couldn't find %s" XORG-TERMINAL))

(def terminal
  (cond
    WAYLAND-DISPLAY WAYLAND-TERMINAL
    XORG-DISPLAY XORG-TERMINAL
    (die 1 "could not figure out what terminal to use")))

(defn main [arg0 & args]
  (def arguments @{})
  (def empty-args @[])
  (var current-opt nil)
  (var args-till-pop 0)

  (defn add-argument [opt val]
    (if (= opt nil)
      (do
        (array/push empty-args val)
        (set args-till-pop 0))
      (do
        (when (= (get arguments opt) nil)
          (put arguments opt @[]))

        (array/push (get arguments opt) val)
        (set args-till-pop (- args-till-pop 1))
        (when (= args-till-pop 0)
          (set current-opt nil)))))

  (each arg args
    (cond
      # if currently parsing an option's args, let it be
      (and (not= current-opt nil))
      (add-argument current-opt arg)

      # option: geometry
      (= arg "-g")
      (do
        (set current-opt :geometry)
        (set args-till-pop 1))

      # option: class
      (= arg "-c")
      (do
        (set current-opt :class)
        (set args-till-pop 1))

      # option: eval
      (= arg "-e")
      (do
        (set current-opt :eval)
        (set args-till-pop 0))

      (add-argument current-opt arg)))

  (def exec-args
    (let [a-geo (get arguments :geometry)
          a-eval (get arguments :eval)
          a-class (get arguments :class)
          args-eval (or a-eval ["tmux"])]

      (case terminal
        "foot"
        ["foot"
         ;(if a-geo ["-W" ;a-geo] [])
         # open tmux as default hehe; this probably should be elsewhere
         ;(if a-class ["-a" ;a-class] [])
         "--"
         ;args-eval]

        "wezterm" # it doesn't support geometry, apparently
        ["wezterm" "start"
         ;(if a-class ["--class" ;a-class] [])
         ;args-eval]

        [terminal
         ;(if a-geo ["-g" ;a-geo] [])
         ;(if a-class ["-c" ;a-class] [])
         ;args-eval])))

  (exec-exit exec-args))
