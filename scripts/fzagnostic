#!/usr/bin/env bash

# A wrapper for fzf and dmenu.
# Bashisms: arrays.

exists() { command -v "$1" >/dev/null 2>/dev/null; }

while getopts "p:h:m" o; do
  case "$o" in
    p) hasPrompt=1 prompt="$OPTARG" ;;
    h) hasHeight=1 height="$OPTARG" ;;
    m) multiSelect=1 ;;
    *)
      printf >&2 "%s\n" "Usage: $(basename "$0") [-p PROMPT] [-h HEIGHT] [-m]"
      exit 1
      ;;
  esac
done

tidyPrompt() {
  [ "$prompt" ] || return 1
  printf "%s" "$prompt" | grep -v ' $' >/dev/null && hasNoSpace=1

  case "$1" in
    space)
      [ "$hasNoSpace" ] && prompt="$prompt "
      ;;

    nospace)
      [ "$hasNoSpace" ] || prompt=$(printf "%s" "$prompt" | sed 's| \+$||')
      ;;

    *)
      printf >&2 "Unexpected...\n"
      exit 1
      ;;
  esac
}

if [ ! -t 2 ] && exists bemenu; then
  args=(-i -n)
  tidyPrompt nospace
  [ "$hasPrompt" ] && args+=(-p "$prompt")
  [ "$hasHeight" ] && args+=(-l "$height") || args+=(-l 10)
  # $multiSelect not supported

  export BEMENU_OPTS=$(bemenu-load-colorscheme)

  bemenu "${args[@]}"
elif [ ! -t 2 ] && [ "$DISPLAY" ] && exists dmenu; then
  args=()
  tidyPrompt space
  [ "$hasPrompt" ] && args+=(-p "$prompt")
  [ "$hasHeight" ] && args+=(-l "$height")
  [ "$multiSelect" ] && args+=(-l "$height")
  dmenu "${args[@]}"

  # $multiSelect not supported
elif [ -t 2 ] && exists fzf; then
  args=()
  tidyPrompt space
  [ "$hasPrompt" ] && args+=(--prompt "$prompt")
  [ "$hasHeight" ] && args+=(--height "$height")
  [ "$multiSelect" ] && args+=(-m)
  printf >&2 '\033[2 q' # change cursor to block
  fzf "${args[@]}" --no-border --no-sort --inline-info --exact
else
  printf >&2 "%s\n" "Could not open dmenu or fzf."
  exit 1
fi
