#!/usr/bin/env sh

# FIXME: this program can very easily be exploited to run arbritary shell cocde

PROGNAME=$(basename "$0")
B16PAT='[a-fA-F0-9]'
EXPORT_TAG=''
PREFIX='#'

main() {
  while read -r line; do
    printf "%s" "$line" \
      | grep '^base0[a-fA-F0-9]:' \
      | sed 's/^\(base0'"$B16PAT"'\): "\('"$B16PAT"'\{6\}\)"/'"$EXPORT_TAG"'\1="'"$PREFIX"'\2"/g' \
      | sed 's|^\(base0[a-fA-F0-9]="#[a-fA-F0-9]\{6\}"\)\s*#.*$|\1|g'
  done
}

usage() {
  printf >&2 "Usage: %s\n" "$PROGNAME [-h | --help] [-e | --export] [ -n | --noprefix ] [THEME]"
  printf >&2 "The theme data is loaded from %s\n" '$XDG_CONFIG_HOME/dots/themes/$THEME.yaml'
  exit 1
}

while [ $# -gt 0 ]; do
  case "$1" in
    --export|-e) EXPORT_TAG='export ' ;;
    --noprefix|-n) PREFIX='' ;;
    --help|-h) usage ;;
    -*)
      printf >&2 "Invalid argument: %s\n" "$1"
      usage
      ;;
    *)
      if [ "$themeSpecified" ]; then
        printf >&2 "Repeated THEME argument: %s\n" "$1"
        usage
      else
        THEME="$1"
        themeSpecified=1
      fi
      ;;
  esac

  shift
done

case $# in
  0)
    if [ -z "$THEME" ] && [ -f ~/.local/share/dots/theme ]; then
      THEME=$(cat ~/.local/share/dots/theme)
    fi
    if [ -z "$THEME" ]; then
      printf >&2 "Failed to get theme; please set environment variable %s or set the value in ~/.local/share/dots/theme\n" '$THEME'
      exit 1
    fi

    main < "${XDG_CONFIG_HOME:-$HOME/.config}/dots/themes/${THEME}.yaml"
    ;;
  *) ;;
esac
